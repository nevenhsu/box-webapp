/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
}

export const Model = forwardRef<any>(
  (props: JSX.IntrinsicElements['group'], ref) => {
    const { nodes, materials } = useGLTF('/cube.glb') as unknown as GLTFResult
    return (
      <group {...props} dispose={null} ref={ref}>
        <mesh
          geometry={nodes.Cube.geometry}
          material={materials.Material}
          scale={8}
          rotation={[-0.16, 0.53, -3.06]}
        />
      </group>
    )
  }
)

useGLTF.preload('/cube.glb')
