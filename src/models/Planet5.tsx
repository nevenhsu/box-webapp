/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { forwardRef } from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['mass星球-火箭发光体']: THREE.Mesh
    ['mass星球-火箭']: THREE.Mesh
  }
  materials: {
    light: THREE.MeshStandardMaterial
    plant1: THREE.MeshPhysicalMaterial
  }
}

export const Model = forwardRef<any>(
  (props: JSX.IntrinsicElements['group'], ref) => {
    const { nodes, materials } = useGLTF(
      '/planet5.glb'
    ) as unknown as GLTFResult
    return (
      <group {...props} dispose={null}>
        <directionalLight
          intensity={0.5}
          color="#ff412a"
          position={[35.33, 10.09, 64.93]}
          rotation={[-0.15, 0.49, -3.07]}
        />
        <PerspectiveCamera
          makeDefault={false}
          far={100}
          near={0.1}
          fov={39.6}
          position={[4.86, 14.02, 55.91]}
          rotation={[-0.27, 0.08, 0.02]}
        />
        <mesh
          geometry={nodes['mass星球-火箭发光体'].geometry}
          material={materials.light}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          geometry={nodes['mass星球-火箭'].geometry}
          material={materials.plant1}
          rotation={[Math.PI / 2, 0, 0]}
        />
      </group>
    )
  }
)

useGLTF.preload('/planet5.glb')
