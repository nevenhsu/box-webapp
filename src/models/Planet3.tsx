/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    古代星球: THREE.Mesh
    ['古代星球-发光']: THREE.Mesh
  }
  materials: {
    古代星球: THREE.MeshPhysicalMaterial
    ['古代星球-发光']: THREE.MeshStandardMaterial
  }
}

export const Model = forwardRef<any>(
  (props: JSX.IntrinsicElements['group'], ref) => {
    const { nodes, materials } = useGLTF(
      '/planet3.glb'
    ) as unknown as GLTFResult
    return (
      <group {...props} dispose={null} ref={ref}>
        <directionalLight
          intensity={0.6}
          color="#9fe9ff"
          position={[22.29, 10.09, 70.47]}
          rotation={[-0.14, 0.3, -3.1]}
        />
        <mesh
          geometry={nodes.古代星球.geometry}
          material={materials.古代星球}
          rotation={[Math.PI / 2, 0, -Math.PI / 8]}
        />
        <mesh
          geometry={nodes['古代星球-发光'].geometry}
          material={materials['古代星球-发光']}
          position={[0.92, 7.41, 1.75]}
          rotation={[Math.PI / 2, 0, -Math.PI / 8]}
        />
      </group>
    )
  }
)

useGLTF.preload('/planet3.glb')
